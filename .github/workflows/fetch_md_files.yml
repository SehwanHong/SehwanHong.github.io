name: Sync Project Content (e.g., Artificial-Intelligence)

on:
  schedule:
    - cron: '0 2 * * *' # 매일 새벽 2시에 실행 (시간 변경)
  workflow_dispatch: # 수동 실행 옵션

jobs:
  sync_project:
    runs-on: ubuntu-latest
    
    # 나중에 여러 프로젝트를 동기화하려면 여기에 strategy matrix를 사용할 수 있습니다.
    # 지금은 'Artificial-Intelligence' 프로젝트에 대해서만 설정합니다.
    env:
      PROJECT_NAME: Artificial-Intelligence
      PROJECT_REPO_PATH: SehwanHong/Artificial-Intelligence
      TARGET_REPO_PATH: ${{ github.repository }} # 예: SehwanHong.github.io

    steps:
      - name: Checkout main website repo (${{ env.TARGET_REPO_PATH }})
        uses: actions/checkout@v3
        with:
          repository: ${{ env.TARGET_REPO_PATH }}
          path: main_website_repo 
          token: ${{ secrets.GH_PAT }} # 메인 리포지토리에 푸시하기 위한 토큰

      - name: Checkout project repository (${{ env.PROJECT_REPO_PATH }})
        uses: actions/checkout@v3
        with:
          repository: ${{ env.PROJECT_REPO_PATH }}
          path: temp_project_content

      - name: Sync project content to main website
        run: |
          echo "Syncing content from ${{ env.PROJECT_REPO_PATH }} to ${{ env.TARGET_REPO_PATH }}/${{ env.PROJECT_NAME }}/"
          mkdir -p main_website_repo/${{ env.PROJECT_NAME }}
          # rsync를 사용하여 temp_project_content/ 의 내용을 main_website_repo/PROJECT_NAME/ 으로 복사
          # --delete 옵션은 소스에 없는 파일은 타겟에서도 삭제하여 동기화합니다.
          # --exclude '.git/' 는 .git 폴더를 제외합니다.
          rsync -av --delete --exclude '.git/' temp_project_content/ main_website_repo/${{ env.PROJECT_NAME }}/

      - name: Commit and push changes to main website
        run: |
          cd main_website_repo
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          # 변경된 모든 파일 (새로 생성된 프로젝트 폴더 포함) 추가
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "Sync content from ${{ env.PROJECT_NAME }} repository"
            echo "Pushing changes..."
            git push
          else
            echo "No changes to commit from ${{ env.PROJECT_NAME }}."
          fi 